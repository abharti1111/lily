version: '1.0'

services:
  django:
    build:
      context: .
      dockerfile: Dockerfile  # Provide the actual Dockerfile name for your Django project
    command: bash -c "ls -altr && python manage.py runserver"
    ports:
      - "8000:8000"  # Adjust the port as needed
    depends_on:
      - scylladb
      - redis
      - redpanda
      - celery
      - mysql

    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  scylladb:
    image: scylladb/scylla
    ports:
      - "9042:9042"  # CQL port for ScyllaDB
    environment:
      - SCYLLA_CONF=/etc/scylla/scylla.yaml
      # Add any additional ScyllaDB configurations here
    healthcheck:
      test: ["CMD", "nodetool", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis
    ports:
      - "6379:6379"  # Redis default port
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  redpanda:
    image: vectorized/redpanda
    ports:
      - "9092:9092"  # Redpanda default port
    healthcheck:
      test: ["CMD", "redpanda-broker", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    image: celery
    # Add the necessary configurations for the Celery service
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "sleep 10" #&& celery -A Lily worker -l info"
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

    depends_on:
      - redis  # Adding Redis as a dependency for Celery

    healthcheck:
      test: ["CMD", "celery", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql
    ports:
      - "3306:3306"  # MySQL default port
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: example_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
